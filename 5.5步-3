对象与对象引用的区别，注意垃圾回收。
这部分相当重要，之前一直弄混，如今找到一个好的文档，借此梳理。
网址:http://blog.sina.com.cn/s/blog_4cd5d2bb0100ve9r.html
内容:
  首先定义一个简单的类
  class Vehicle {
       int passengers;      
       int fuelcap;
       int mpg;
  }
  然后一般创建对象都有这句代码: Vehicle veh1 = new Vehicle();
  按照网址的内容所述，这一句代码包含4个动作
  1）右边的“new Vehicle”，是以Vehicle类为模板，在堆空间里创建一个Vehicle类对象（也简称为Vehicle对象）。
  2）末尾的()意味着，在对象创建后，立即调用Vehicle类的构造函数，对刚生成的对象进行初始化。构造函数是肯定有的。
  如果你没写，Java会给你补上一个默认的构造函数。
  3）左边的“Vehicle veh1”创建了一个Vehicle类引用变量。所谓Vehicle类引用，就是以后可以用来指向Vehicle对象的对象引用。
  4）“=”操作符使对象引用指向刚创建的那个Vehicle对象。
  将这句代码拆成两段：
  Vehicle veh1;
  veh1 = new Vehicle();
  有两个实体，一个是类对象引用变量，一个是类对象本身
  对象创建在堆当中，而引用变量在数据段以及栈空间中(这里待定)，二者所在的地方不同。
  一个类Vehicle 可以创建很多个对象，但他们的名字是什么，不可能都叫Vehicle，那么如何访问该对象呢，这是用引用变量来间接访问。
  对象好比是一只很大的气球，大到我们抓不住它。引用变量是一根绳， 可以用来系汽球。
  如果只执行了第一条语句，还没执行第二条，此时创建的引用变量veh1还没指向任何一个对象，它的值是null。引用变量可以指向某个对象，或者为null。
  它是一根绳，一根还没有系上任何一个汽球的绳。执行了第二句后，一只新汽球做出来了，并被系在veh1这根绳上。我们抓住这根绳，就等于抓住了那只汽球。
  这是如果有这一句代码:
  Vehicle veh2;
  就又做了一根绳，还没系上汽球。如果再加一句：
       veh2 = veh1;
系上了。这里，发生了复制行为。但是，要说明的是，对象本身并没有被复制，被复制的只是对象引用。结果是，veh2也指向了veh1所指向的对象。
两根绳系的是同一只汽球。
如果用下句再创建一个对象：
veh2 = new Vehicle();
则引用变量veh2改指向第二个对象
从以上叙述再推演下去，我们可以获得以下结论：
（1）一个对象引用可以指向0个或1个对象（一根绳子可以不系汽球，也可以系一个汽球）；
（2）一个对象可以有N个引用指向它（可以有N条绳子系住一个汽球）。
       如果再来下面语句：
       veh1 = veh2;
按上面的推断，veh1也指向了第二个对象。这个没问题。问题是第一个对象呢？没有一条绳子系住它，它飞了。多数书里说，它被Java的垃圾回收机制回收了。
这不确切。正确地说，它已成为垃圾回收机制的处理对象。至于什么时候真正被回收，那要看垃圾回收机制的心情了。

  
  
  
  
  
  
  
  
